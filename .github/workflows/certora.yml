# This is an example configuration file for running Certora verification
# through github actions.  You can see the results for each push in the
# "Actions" tab on the github website.
#
name: Certora verification

on:
  push: {}
  pull_request: {}
  workflow_dispatch: {}

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      # check out the current version
      - uses: actions/checkout@v2

      # install Certora dependencies and CLI
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install certora
        run: pip install certora-cli

      # the following is only necessary if your project depends on contracts
      # installed using yarn
      # - name: Install yarn
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      #     cache: 'yarn'
      # - name: Install dependencies
      #   run: yarn

      # Install the appropriate version of solc
      - name: Install solc
        run: |
          wget https://github.com/ethereum/solidity/releases/download/v0.8.13/solc-static-linux
          chmod +x solc-static-linux
          sudo mv solc-static-linux /usr/local/bin/solc

      - name: Install contract dependencies
        run: yarn

      - name: Munging
        run: cd certora && make munged


      # Do the actual verification.  The `run` field could be simply
      #
      #   certoraRun certora/configs/${{ matrix.params }}
      # 
      # but we do a little extra work to get the commit messages into the
      # `--msg` argument to `certoraRun`
      #
      # Here ${{ matrix.params }} gets replaced with each of the parameters
      # listed in the `params` section below.
      - name: Verify rule ${{ matrix.rules }}
        run: >
          message="$(git log -n 1 --pretty=format:'CI ${{matrix.rules}} %h .... %s')";
          ./certora/scripts/verifySyndicate.sh \
            "$(echo $message | sed 's/[^a-zA-Z0-9., _-]/ /g')" ${{matrix.rules}}
        env:
          # For this to work, you must set your CERTORAKEY secret on the github
          # website (settings > secrets & variables > actions > new repository secret)
          CERTORAKEY: ${{ secrets.CERTORAKEY }}

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        rules:
          # - canNotDegisterUnregisteredKnot
          # - unstakingIncreasesSETHAmount
          # - totalEthReceivedMonotonicallyIncreases
          # - addressZeroHasNoBalance
          # - addressZeroHasNoStakedBalance
          # - getUnprocessedETHForAllCollateralizedSlot_dependsOnNumberOfKnots
          - noWhitelistNoStake
          - numberOfRegisteredKnotsIs0MeansNoRegisteredKnots
          - numberOfRegisteredKnotsIsNumberOfRegisteredKnots
          - doubleRegisterWillFail
          - registeringInactiveWillFail
